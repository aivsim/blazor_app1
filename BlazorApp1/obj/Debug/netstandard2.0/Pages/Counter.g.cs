#pragma checksum "E:\Projects\BlazorApp1\BlazorApp1\Pages\Counter.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9e5e403eb64d893bf559f029b0d16378906e78ee"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorApp1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using BlazorApp1;
    using BlazorApp1.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/counter")]
    public class Counter : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddContent(0, "\n");
            builder.OpenElement(1, "h1");
            builder.AddContent(2, "Counter");
            builder.CloseElement();
            builder.AddContent(3, "\n\n");
            builder.OpenElement(4, "p");
            builder.AddContent(5, "Current count: ");
            builder.AddContent(6, currentCount);
            builder.CloseElement();
            builder.AddContent(7, "\n\n");
            builder.OpenElement(8, "button");
            builder.AddAttribute(9, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(IncrementCount));
            builder.AddContent(10, "Click me");
            builder.CloseElement();
            builder.AddContent(11, "\n\n");
        }
        #pragma warning restore 1998
#line 9 "E:\Projects\BlazorApp1\BlazorApp1\Pages\Counter.cshtml"
            
    int currentCount = 0;

    public int IncrementAmount { get; set; } = 1;

    void IncrementCount()
    {
        currentCount += IncrementAmount; 
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
